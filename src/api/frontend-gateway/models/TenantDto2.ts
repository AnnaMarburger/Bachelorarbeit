/* tslint:disable */
/* eslint-disable */
/**
 * HSP Frontend Gateway API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { LanguageDto } from './LanguageDto';
import {
    LanguageDtoFromJSON,
    LanguageDtoFromJSONTyped,
    LanguageDtoToJSON,
} from './LanguageDto';
import type { InternationalizedString } from './InternationalizedString';
import {
    InternationalizedStringFromJSON,
    InternationalizedStringFromJSONTyped,
    InternationalizedStringToJSON,
} from './InternationalizedString';
import type { LanguageDtoAllOfIcon } from './LanguageDtoAllOfIcon';
import {
    LanguageDtoAllOfIconFromJSON,
    LanguageDtoAllOfIconFromJSONTyped,
    LanguageDtoAllOfIconToJSON,
} from './LanguageDtoAllOfIcon';
import type { TenantDto2ParticipationState } from './TenantDto2ParticipationState';
import {
    TenantDto2ParticipationStateFromJSON,
    TenantDto2ParticipationStateFromJSONTyped,
    TenantDto2ParticipationStateToJSON,
} from './TenantDto2ParticipationState';

/**
 * 
 * @export
 * @interface TenantDto2
 */
export interface TenantDto2 {
    /**
     * 
     * @type {InternationalizedString}
     * @memberof TenantDto2
     */
    title: InternationalizedString;
    /**
     * 
     * @type {InternationalizedString}
     * @memberof TenantDto2
     */
    shortDescription: InternationalizedString;
    /**
     * 
     * @type {LanguageDtoAllOfIcon}
     * @memberof TenantDto2
     */
    asset?: LanguageDtoAllOfIcon;
    /**
     * 
     * @type {Array<LanguageDto>}
     * @memberof TenantDto2
     */
    languages: Array<LanguageDto>;
    /**
     * 
     * @type {TenantDto2ParticipationState}
     * @memberof TenantDto2
     */
    participationState?: TenantDto2ParticipationState;
}

/**
 * Check if a given object implements the TenantDto2 interface.
 */
export function instanceOfTenantDto2(value: object): value is TenantDto2 {
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('shortDescription' in value) || value['shortDescription'] === undefined) return false;
    if (!('languages' in value) || value['languages'] === undefined) return false;
    return true;
}

export function TenantDto2FromJSON(json: any): TenantDto2 {
    return TenantDto2FromJSONTyped(json, false);
}

export function TenantDto2FromJSONTyped(json: any, ignoreDiscriminator: boolean): TenantDto2 {
    if (json == null) {
        return json;
    }
    return {
        
        'title': InternationalizedStringFromJSON(json['title']),
        'shortDescription': InternationalizedStringFromJSON(json['shortDescription']),
        'asset': json['asset'] == null ? undefined : LanguageDtoAllOfIconFromJSON(json['asset']),
        'languages': ((json['languages'] as Array<any>).map(LanguageDtoFromJSON)),
        'participationState': json['participationState'] == null ? undefined : TenantDto2ParticipationStateFromJSON(json['participationState']),
    };
}

export function TenantDto2ToJSON(value?: TenantDto2 | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'title': InternationalizedStringToJSON(value['title']),
        'shortDescription': InternationalizedStringToJSON(value['shortDescription']),
        'asset': LanguageDtoAllOfIconToJSON(value['asset']),
        'languages': ((value['languages'] as Array<any>).map(LanguageDtoToJSON)),
        'participationState': TenantDto2ParticipationStateToJSON(value['participationState']),
    };
}

