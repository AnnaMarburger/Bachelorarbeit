/* tslint:disable */
/* eslint-disable */
/**
 * HSP Frontend Gateway API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TenantDto2 } from './TenantDto2';
import {
    TenantDto2FromJSON,
    TenantDto2FromJSONTyped,
    TenantDto2ToJSON,
} from './TenantDto2';
import type { ProjectDtoAllOfAsset } from './ProjectDtoAllOfAsset';
import {
    ProjectDtoAllOfAssetFromJSON,
    ProjectDtoAllOfAssetFromJSONTyped,
    ProjectDtoAllOfAssetToJSON,
} from './ProjectDtoAllOfAsset';
import type { LanguageDto } from './LanguageDto';
import {
    LanguageDtoFromJSON,
    LanguageDtoFromJSONTyped,
    LanguageDtoToJSON,
} from './LanguageDto';
import type { InternationalizedString } from './InternationalizedString';
import {
    InternationalizedStringFromJSON,
    InternationalizedStringFromJSONTyped,
    InternationalizedStringToJSON,
} from './InternationalizedString';
import type { ProjectDtoAllOfParticipationState } from './ProjectDtoAllOfParticipationState';
import {
    ProjectDtoAllOfParticipationStateFromJSON,
    ProjectDtoAllOfParticipationStateFromJSONTyped,
    ProjectDtoAllOfParticipationStateToJSON,
} from './ProjectDtoAllOfParticipationState';

/**
 * 
 * @export
 * @interface StudyDto
 */
export interface StudyDto {
    /**
     * 
     * @type {string}
     * @memberof StudyDto
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof StudyDto
     */
    tenantId: string;
    /**
     * 
     * @type {string}
     * @memberof StudyDto
     */
    name: string;
    /**
     * 
     * @type {InternationalizedString}
     * @memberof StudyDto
     */
    title: InternationalizedString;
    /**
     * 
     * @type {InternationalizedString}
     * @memberof StudyDto
     */
    shortDescription: InternationalizedString;
    /**
     * 
     * @type {ProjectDtoAllOfAsset}
     * @memberof StudyDto
     */
    asset?: ProjectDtoAllOfAsset;
    /**
     * 
     * @type {Date}
     * @memberof StudyDto
     */
    published?: Date;
    /**
     * 
     * @type {Array<LanguageDto>}
     * @memberof StudyDto
     */
    languages: Array<LanguageDto>;
    /**
     * 
     * @type {ProjectDtoAllOfParticipationState}
     * @memberof StudyDto
     */
    participationState?: ProjectDtoAllOfParticipationState;
    /**
     * 
     * @type {TenantDto2}
     * @memberof StudyDto
     */
    tenant: TenantDto2;
}

/**
 * Check if a given object implements the StudyDto interface.
 */
export function instanceOfStudyDto(value: object): value is StudyDto {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('tenantId' in value) || value['tenantId'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('shortDescription' in value) || value['shortDescription'] === undefined) return false;
    if (!('languages' in value) || value['languages'] === undefined) return false;
    if (!('tenant' in value) || value['tenant'] === undefined) return false;
    return true;
}

export function StudyDtoFromJSON(json: any): StudyDto {
    return StudyDtoFromJSONTyped(json, false);
}

export function StudyDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): StudyDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'tenantId': json['tenantId'],
        'name': json['name'],
        'title': InternationalizedStringFromJSON(json['title']),
        'shortDescription': InternationalizedStringFromJSON(json['shortDescription']),
        'asset': json['asset'] == null ? undefined : ProjectDtoAllOfAssetFromJSON(json['asset']),
        'published': json['published'] == null ? undefined : (new Date(json['published'])),
        'languages': ((json['languages'] as Array<any>).map(LanguageDtoFromJSON)),
        'participationState': json['participationState'] == null ? undefined : ProjectDtoAllOfParticipationStateFromJSON(json['participationState']),
        'tenant': TenantDto2FromJSON(json['tenant']),
    };
}

export function StudyDtoToJSON(value?: StudyDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'tenantId': value['tenantId'],
        'name': value['name'],
        'title': InternationalizedStringToJSON(value['title']),
        'shortDescription': InternationalizedStringToJSON(value['shortDescription']),
        'asset': ProjectDtoAllOfAssetToJSON(value['asset']),
        'published': value['published'] == null ? undefined : ((value['published'] as any).toISOString()),
        'languages': ((value['languages'] as Array<any>).map(LanguageDtoToJSON)),
        'participationState': ProjectDtoAllOfParticipationStateToJSON(value['participationState']),
        'tenant': TenantDto2ToJSON(value['tenant']),
    };
}

