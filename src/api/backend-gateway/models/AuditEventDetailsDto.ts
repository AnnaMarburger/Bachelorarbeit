/* tslint:disable */
/* eslint-disable */
/**
 * HSP Backend Gateway API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AuditEventDataDto } from './AuditEventDataDto';
import {
    AuditEventDataDtoFromJSON,
    AuditEventDataDtoFromJSONTyped,
    AuditEventDataDtoToJSON,
} from './AuditEventDataDto';

/**
 * 
 * @export
 * @interface AuditEventDetailsDto
 */
export interface AuditEventDetailsDto {
    /**
     * 
     * @type {number}
     * @memberof AuditEventDetailsDto
     */
    id: number;
    /**
     * 
     * @type {Date}
     * @memberof AuditEventDetailsDto
     */
    created: Date;
    /**
     * 
     * @type {Date}
     * @memberof AuditEventDetailsDto
     */
    lastModified: Date;
    /**
     * 
     * @type {string}
     * @memberof AuditEventDetailsDto
     */
    type: string;
    /**
     * 
     * @type {string}
     * @memberof AuditEventDetailsDto
     */
    userId?: string;
    /**
     * 
     * @type {string}
     * @memberof AuditEventDetailsDto
     */
    userName?: string;
    /**
     * 
     * @type {AuditEventDataDto}
     * @memberof AuditEventDetailsDto
     */
    data: AuditEventDataDto;
}

/**
 * Check if a given object implements the AuditEventDetailsDto interface.
 */
export function instanceOfAuditEventDetailsDto(value: object): value is AuditEventDetailsDto {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('created' in value) || value['created'] === undefined) return false;
    if (!('lastModified' in value) || value['lastModified'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('data' in value) || value['data'] === undefined) return false;
    return true;
}

export function AuditEventDetailsDtoFromJSON(json: any): AuditEventDetailsDto {
    return AuditEventDetailsDtoFromJSONTyped(json, false);
}

export function AuditEventDetailsDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): AuditEventDetailsDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'created': (new Date(json['created'])),
        'lastModified': (new Date(json['lastModified'])),
        'type': json['type'],
        'userId': json['userId'] == null ? undefined : json['userId'],
        'userName': json['userName'] == null ? undefined : json['userName'],
        'data': AuditEventDataDtoFromJSON(json['data']),
    };
}

export function AuditEventDetailsDtoToJSON(value?: AuditEventDetailsDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'created': ((value['created']).toISOString()),
        'lastModified': ((value['lastModified']).toISOString()),
        'type': value['type'],
        'userId': value['userId'],
        'userName': value['userName'],
        'data': AuditEventDataDtoToJSON(value['data']),
    };
}

