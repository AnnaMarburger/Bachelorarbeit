/* tslint:disable */
/* eslint-disable */
/**
 * HSP Backend Gateway API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AuditEventEnvironmentDto
 */
export interface AuditEventEnvironmentDto {
    /**
     * 
     * @type {string}
     * @memberof AuditEventEnvironmentDto
     */
    culture: string;
    /**
     * 
     * @type {string}
     * @memberof AuditEventEnvironmentDto
     */
    userName?: string;
    /**
     * 
     * @type {string}
     * @memberof AuditEventEnvironmentDto
     */
    domainName: string;
    /**
     * 
     * @type {string}
     * @memberof AuditEventEnvironmentDto
     */
    machineName: string;
    /**
     * 
     * @type {string}
     * @memberof AuditEventEnvironmentDto
     */
    assemblyName: string;
    /**
     * 
     * @type {string}
     * @memberof AuditEventEnvironmentDto
     */
    callingMethodName: string;
}

/**
 * Check if a given object implements the AuditEventEnvironmentDto interface.
 */
export function instanceOfAuditEventEnvironmentDto(value: object): value is AuditEventEnvironmentDto {
    if (!('culture' in value) || value['culture'] === undefined) return false;
    if (!('domainName' in value) || value['domainName'] === undefined) return false;
    if (!('machineName' in value) || value['machineName'] === undefined) return false;
    if (!('assemblyName' in value) || value['assemblyName'] === undefined) return false;
    if (!('callingMethodName' in value) || value['callingMethodName'] === undefined) return false;
    return true;
}

export function AuditEventEnvironmentDtoFromJSON(json: any): AuditEventEnvironmentDto {
    return AuditEventEnvironmentDtoFromJSONTyped(json, false);
}

export function AuditEventEnvironmentDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): AuditEventEnvironmentDto {
    if (json == null) {
        return json;
    }
    return {
        
        'culture': json['culture'],
        'userName': json['userName'] == null ? undefined : json['userName'],
        'domainName': json['domainName'],
        'machineName': json['machineName'],
        'assemblyName': json['assemblyName'],
        'callingMethodName': json['callingMethodName'],
    };
}

export function AuditEventEnvironmentDtoToJSON(value?: AuditEventEnvironmentDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'culture': value['culture'],
        'userName': value['userName'],
        'domainName': value['domainName'],
        'machineName': value['machineName'],
        'assemblyName': value['assemblyName'],
        'callingMethodName': value['callingMethodName'],
    };
}

