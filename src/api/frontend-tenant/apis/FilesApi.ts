/* tslint:disable */
/* eslint-disable */
/**
 * HSP Frontend Tenant API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';

export interface FilesGetFileRequest {
    fileId: string;
    size?: number;
    w?: number;
    h?: number;
    x?: number;
    y?: number;
    webp?: boolean;
}

/**
 * 
 */
export class FilesApi extends runtime.BaseAPI {

    /**
     */
    async filesGetFileRaw(requestParameters: FilesGetFileRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Blob>> {
        if (requestParameters['fileId'] == null) {
            throw new runtime.RequiredError(
                'fileId',
                'Required parameter "fileId" was null or undefined when calling filesGetFile().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['size'] != null) {
            queryParameters['size'] = requestParameters['size'];
        }

        if (requestParameters['w'] != null) {
            queryParameters['w'] = requestParameters['w'];
        }

        if (requestParameters['h'] != null) {
            queryParameters['h'] = requestParameters['h'];
        }

        if (requestParameters['x'] != null) {
            queryParameters['x'] = requestParameters['x'];
        }

        if (requestParameters['y'] != null) {
            queryParameters['y'] = requestParameters['y'];
        }

        if (requestParameters['webp'] != null) {
            queryParameters['webp'] = requestParameters['webp'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v1/public/files/{fileId}`.replace(`{${"fileId"}}`, encodeURIComponent(String(requestParameters['fileId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.BlobApiResponse(response);
    }

    /**
     */
    async filesGetFile(requestParameters: FilesGetFileRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Blob> {
        const response = await this.filesGetFileRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
