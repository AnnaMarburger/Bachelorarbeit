/* tslint:disable */
/* eslint-disable */
/**
 * HSP Frontend Tenant API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { QuestionDtoAllOfHint } from './QuestionDtoAllOfHint';
import {
    QuestionDtoAllOfHintFromJSON,
    QuestionDtoAllOfHintFromJSONTyped,
    QuestionDtoAllOfHintToJSON,
} from './QuestionDtoAllOfHint';
import type { ElementType } from './ElementType';
import {
    ElementTypeFromJSON,
    ElementTypeFromJSONTyped,
    ElementTypeToJSON,
} from './ElementType';
import type { NumberQuestionDtoAllOfAnswer } from './NumberQuestionDtoAllOfAnswer';
import {
    NumberQuestionDtoAllOfAnswerFromJSON,
    NumberQuestionDtoAllOfAnswerFromJSONTyped,
    NumberQuestionDtoAllOfAnswerToJSON,
} from './NumberQuestionDtoAllOfAnswer';
import type { ContentDtoCondition } from './ContentDtoCondition';
import {
    ContentDtoConditionFromJSON,
    ContentDtoConditionFromJSONTyped,
    ContentDtoConditionToJSON,
} from './ContentDtoCondition';
import type { InternationalizedString } from './InternationalizedString';
import {
    InternationalizedStringFromJSON,
    InternationalizedStringFromJSONTyped,
    InternationalizedStringToJSON,
} from './InternationalizedString';
import type { QuestionDto } from './QuestionDto';
import {
    QuestionDtoFromJSON,
    QuestionDtoFromJSONTyped,
    QuestionDtoToJSON,
} from './QuestionDto';
import type { NumberQuestionValidation } from './NumberQuestionValidation';
import {
    NumberQuestionValidationFromJSON,
    NumberQuestionValidationFromJSONTyped,
    NumberQuestionValidationToJSON,
} from './NumberQuestionValidation';

/**
 * 
 * @export
 * @interface NumberQuestionDto
 */
export interface NumberQuestionDto extends QuestionDto {
    /**
     * 
     * @type {NumberQuestionValidation}
     * @memberof NumberQuestionDto
     */
    validation: NumberQuestionValidation;
    /**
     * 
     * @type {NumberQuestionDtoAllOfAnswer}
     * @memberof NumberQuestionDto
     */
    answer?: NumberQuestionDtoAllOfAnswer;
}

/**
 * Check if a given object implements the NumberQuestionDto interface.
 */
export function instanceOfNumberQuestionDto(value: object): value is NumberQuestionDto {
    if (!('validation' in value) || value['validation'] === undefined) return false;
    return true;
}

export function NumberQuestionDtoFromJSON(json: any): NumberQuestionDto {
    return NumberQuestionDtoFromJSONTyped(json, false);
}

export function NumberQuestionDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): NumberQuestionDto {
    if (json == null) {
        return json;
    }
    return {
        ...QuestionDtoFromJSONTyped(json, ignoreDiscriminator),
        'validation': NumberQuestionValidationFromJSON(json['validation']),
        'answer': json['answer'] == null ? undefined : NumberQuestionDtoAllOfAnswerFromJSON(json['answer']),
    };
}

export function NumberQuestionDtoToJSON(value?: NumberQuestionDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        ...QuestionDtoToJSON(value),
        'validation': NumberQuestionValidationToJSON(value['validation']),
        'answer': NumberQuestionDtoAllOfAnswerToJSON(value['answer']),
    };
}

