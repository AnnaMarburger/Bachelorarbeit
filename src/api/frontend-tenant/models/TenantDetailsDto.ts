/* tslint:disable */
/* eslint-disable */
/**
 * HSP Frontend Tenant API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ProjectDetailsDtoAllOfAsset } from './ProjectDetailsDtoAllOfAsset';
import {
    ProjectDetailsDtoAllOfAssetFromJSON,
    ProjectDetailsDtoAllOfAssetFromJSONTyped,
    ProjectDetailsDtoAllOfAssetToJSON,
} from './ProjectDetailsDtoAllOfAsset';
import type { LanguageDto } from './LanguageDto';
import {
    LanguageDtoFromJSON,
    LanguageDtoFromJSONTyped,
    LanguageDtoToJSON,
} from './LanguageDto';
import type { TenantDtoParticipationState } from './TenantDtoParticipationState';
import {
    TenantDtoParticipationStateFromJSON,
    TenantDtoParticipationStateFromJSONTyped,
    TenantDtoParticipationStateToJSON,
} from './TenantDtoParticipationState';
import type { InternationalizedString } from './InternationalizedString';
import {
    InternationalizedStringFromJSON,
    InternationalizedStringFromJSONTyped,
    InternationalizedStringToJSON,
} from './InternationalizedString';
import type { InternationalizedDocument } from './InternationalizedDocument';
import {
    InternationalizedDocumentFromJSON,
    InternationalizedDocumentFromJSONTyped,
    InternationalizedDocumentToJSON,
} from './InternationalizedDocument';

/**
 * 
 * @export
 * @interface TenantDetailsDto
 */
export interface TenantDetailsDto {
    /**
     * 
     * @type {InternationalizedString}
     * @memberof TenantDetailsDto
     */
    title: InternationalizedString;
    /**
     * 
     * @type {InternationalizedString}
     * @memberof TenantDetailsDto
     */
    shortDescription: InternationalizedString;
    /**
     * 
     * @type {InternationalizedDocument}
     * @memberof TenantDetailsDto
     */
    description: InternationalizedDocument;
    /**
     * 
     * @type {Array<LanguageDto>}
     * @memberof TenantDetailsDto
     */
    languages: Array<LanguageDto>;
    /**
     * 
     * @type {ProjectDetailsDtoAllOfAsset}
     * @memberof TenantDetailsDto
     */
    asset?: ProjectDetailsDtoAllOfAsset;
    /**
     * 
     * @type {TenantDtoParticipationState}
     * @memberof TenantDetailsDto
     */
    participationState?: TenantDtoParticipationState;
}

/**
 * Check if a given object implements the TenantDetailsDto interface.
 */
export function instanceOfTenantDetailsDto(value: object): value is TenantDetailsDto {
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('shortDescription' in value) || value['shortDescription'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('languages' in value) || value['languages'] === undefined) return false;
    return true;
}

export function TenantDetailsDtoFromJSON(json: any): TenantDetailsDto {
    return TenantDetailsDtoFromJSONTyped(json, false);
}

export function TenantDetailsDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): TenantDetailsDto {
    if (json == null) {
        return json;
    }
    return {
        
        'title': InternationalizedStringFromJSON(json['title']),
        'shortDescription': InternationalizedStringFromJSON(json['shortDescription']),
        'description': InternationalizedDocumentFromJSON(json['description']),
        'languages': ((json['languages'] as Array<any>).map(LanguageDtoFromJSON)),
        'asset': json['asset'] == null ? undefined : ProjectDetailsDtoAllOfAssetFromJSON(json['asset']),
        'participationState': json['participationState'] == null ? undefined : TenantDtoParticipationStateFromJSON(json['participationState']),
    };
}

export function TenantDetailsDtoToJSON(value?: TenantDetailsDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'title': InternationalizedStringToJSON(value['title']),
        'shortDescription': InternationalizedStringToJSON(value['shortDescription']),
        'description': InternationalizedDocumentToJSON(value['description']),
        'languages': ((value['languages'] as Array<any>).map(LanguageDtoToJSON)),
        'asset': ProjectDetailsDtoAllOfAssetToJSON(value['asset']),
        'participationState': TenantDtoParticipationStateToJSON(value['participationState']),
    };
}

