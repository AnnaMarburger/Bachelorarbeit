/* tslint:disable */
/* eslint-disable */
/**
 * HSP Frontend Tenant API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ValueDto } from './ValueDto';
import {
    ValueDtoFromJSON,
    ValueDtoFromJSONTyped,
    ValueDtoToJSON,
} from './ValueDto';

/**
 * 
 * @export
 * @interface UpdateContextObjectInstanceCommand
 */
export interface UpdateContextObjectInstanceCommand {
    /**
     * 
     * @type {string}
     * @memberof UpdateContextObjectInstanceCommand
     */
    contextObjectId: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateContextObjectInstanceCommand
     */
    bucketId: string;
    /**
     * 
     * @type {Array<ValueDto>}
     * @memberof UpdateContextObjectInstanceCommand
     */
    values: Array<ValueDto>;
}

/**
 * Check if a given object implements the UpdateContextObjectInstanceCommand interface.
 */
export function instanceOfUpdateContextObjectInstanceCommand(value: object): value is UpdateContextObjectInstanceCommand {
    if (!('contextObjectId' in value) || value['contextObjectId'] === undefined) return false;
    if (!('bucketId' in value) || value['bucketId'] === undefined) return false;
    if (!('values' in value) || value['values'] === undefined) return false;
    return true;
}

export function UpdateContextObjectInstanceCommandFromJSON(json: any): UpdateContextObjectInstanceCommand {
    return UpdateContextObjectInstanceCommandFromJSONTyped(json, false);
}

export function UpdateContextObjectInstanceCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateContextObjectInstanceCommand {
    if (json == null) {
        return json;
    }
    return {
        
        'contextObjectId': json['contextObjectId'],
        'bucketId': json['bucketId'],
        'values': ((json['values'] as Array<any>).map(ValueDtoFromJSON)),
    };
}

export function UpdateContextObjectInstanceCommandToJSON(value?: UpdateContextObjectInstanceCommand | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'contextObjectId': value['contextObjectId'],
        'bucketId': value['bucketId'],
        'values': ((value['values'] as Array<any>).map(ValueDtoToJSON)),
    };
}

