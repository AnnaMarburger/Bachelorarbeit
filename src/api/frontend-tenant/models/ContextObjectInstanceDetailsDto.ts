/* tslint:disable */
/* eslint-disable */
/**
 * HSP Frontend Tenant API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ContentDto } from './ContentDto';
import {
    ContentDtoFromJSON,
    ContentDtoFromJSONTyped,
    ContentDtoToJSON,
} from './ContentDto';
import type { SharingState } from './SharingState';
import {
    SharingStateFromJSON,
    SharingStateFromJSONTyped,
    SharingStateToJSON,
} from './SharingState';

/**
 * 
 * @export
 * @interface ContextObjectInstanceDetailsDto
 */
export interface ContextObjectInstanceDetailsDto {
    /**
     * 
     * @type {string}
     * @memberof ContextObjectInstanceDetailsDto
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof ContextObjectInstanceDetailsDto
     */
    tenantId: string;
    /**
     * 
     * @type {string}
     * @memberof ContextObjectInstanceDetailsDto
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof ContextObjectInstanceDetailsDto
     */
    contextObjectId: string;
    /**
     * 
     * @type {number}
     * @memberof ContextObjectInstanceDetailsDto
     */
    contextObjectVersion: number;
    /**
     * 
     * @type {string}
     * @memberof ContextObjectInstanceDetailsDto
     */
    contextObjectName: string;
    /**
     * 
     * @type {Array<ContentDto>}
     * @memberof ContextObjectInstanceDetailsDto
     */
    contents: Array<ContentDto>;
    /**
     * 
     * @type {SharingState}
     * @memberof ContextObjectInstanceDetailsDto
     */
    sharingState: SharingState;
}

/**
 * Check if a given object implements the ContextObjectInstanceDetailsDto interface.
 */
export function instanceOfContextObjectInstanceDetailsDto(value: object): value is ContextObjectInstanceDetailsDto {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('tenantId' in value) || value['tenantId'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('contextObjectId' in value) || value['contextObjectId'] === undefined) return false;
    if (!('contextObjectVersion' in value) || value['contextObjectVersion'] === undefined) return false;
    if (!('contextObjectName' in value) || value['contextObjectName'] === undefined) return false;
    if (!('contents' in value) || value['contents'] === undefined) return false;
    if (!('sharingState' in value) || value['sharingState'] === undefined) return false;
    return true;
}

export function ContextObjectInstanceDetailsDtoFromJSON(json: any): ContextObjectInstanceDetailsDto {
    return ContextObjectInstanceDetailsDtoFromJSONTyped(json, false);
}

export function ContextObjectInstanceDetailsDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ContextObjectInstanceDetailsDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'tenantId': json['tenantId'],
        'name': json['name'],
        'contextObjectId': json['contextObjectId'],
        'contextObjectVersion': json['contextObjectVersion'],
        'contextObjectName': json['contextObjectName'],
        'contents': ((json['contents'] as Array<any>).map(ContentDtoFromJSON)),
        'sharingState': SharingStateFromJSON(json['sharingState']),
    };
}

export function ContextObjectInstanceDetailsDtoToJSON(value?: ContextObjectInstanceDetailsDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'tenantId': value['tenantId'],
        'name': value['name'],
        'contextObjectId': value['contextObjectId'],
        'contextObjectVersion': value['contextObjectVersion'],
        'contextObjectName': value['contextObjectName'],
        'contents': ((value['contents'] as Array<any>).map(ContentDtoToJSON)),
        'sharingState': SharingStateToJSON(value['sharingState']),
    };
}

