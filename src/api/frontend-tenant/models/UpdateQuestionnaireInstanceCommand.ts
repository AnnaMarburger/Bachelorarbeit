/* tslint:disable */
/* eslint-disable */
/**
 * HSP Frontend Tenant API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AnswerDto } from './AnswerDto';
import {
    AnswerDtoFromJSON,
    AnswerDtoFromJSONTyped,
    AnswerDtoToJSON,
} from './AnswerDto';

/**
 * 
 * @export
 * @interface UpdateQuestionnaireInstanceCommand
 */
export interface UpdateQuestionnaireInstanceCommand {
    /**
     * 
     * @type {string}
     * @memberof UpdateQuestionnaireInstanceCommand
     */
    questionnaireId: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateQuestionnaireInstanceCommand
     */
    bucketId: string;
    /**
     * 
     * @type {Array<AnswerDto>}
     * @memberof UpdateQuestionnaireInstanceCommand
     */
    answers?: Array<AnswerDto>;
    /**
     * 
     * @type {Date}
     * @memberof UpdateQuestionnaireInstanceCommand
     */
    started?: Date;
    /**
     * 
     * @type {Date}
     * @memberof UpdateQuestionnaireInstanceCommand
     */
    completed?: Date;
    /**
     * 
     * @type {Date}
     * @memberof UpdateQuestionnaireInstanceCommand
     */
    hidden?: Date;
    /**
     * 
     * @type {string}
     * @memberof UpdateQuestionnaireInstanceCommand
     */
    executionLanguageId?: string;
}

/**
 * Check if a given object implements the UpdateQuestionnaireInstanceCommand interface.
 */
export function instanceOfUpdateQuestionnaireInstanceCommand(value: object): value is UpdateQuestionnaireInstanceCommand {
    if (!('questionnaireId' in value) || value['questionnaireId'] === undefined) return false;
    if (!('bucketId' in value) || value['bucketId'] === undefined) return false;
    return true;
}

export function UpdateQuestionnaireInstanceCommandFromJSON(json: any): UpdateQuestionnaireInstanceCommand {
    return UpdateQuestionnaireInstanceCommandFromJSONTyped(json, false);
}

export function UpdateQuestionnaireInstanceCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateQuestionnaireInstanceCommand {
    if (json == null) {
        return json;
    }
    return {
        
        'questionnaireId': json['questionnaireId'],
        'bucketId': json['bucketId'],
        'answers': json['answers'] == null ? undefined : ((json['answers'] as Array<any>).map(AnswerDtoFromJSON)),
        'started': json['started'] == null ? undefined : (new Date(json['started'])),
        'completed': json['completed'] == null ? undefined : (new Date(json['completed'])),
        'hidden': json['hidden'] == null ? undefined : (new Date(json['hidden'])),
        'executionLanguageId': json['executionLanguageId'] == null ? undefined : json['executionLanguageId'],
    };
}

export function UpdateQuestionnaireInstanceCommandToJSON(value?: UpdateQuestionnaireInstanceCommand | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'questionnaireId': value['questionnaireId'],
        'bucketId': value['bucketId'],
        'answers': value['answers'] == null ? undefined : ((value['answers'] as Array<any>).map(AnswerDtoToJSON)),
        'started': value['started'] == null ? undefined : ((value['started'] as any).toISOString()),
        'completed': value['completed'] == null ? undefined : ((value['completed'] as any).toISOString()),
        'hidden': value['hidden'] == null ? undefined : ((value['hidden'] as any).toISOString()),
        'executionLanguageId': value['executionLanguageId'],
    };
}

