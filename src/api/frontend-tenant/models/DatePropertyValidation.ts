/* tslint:disable */
/* eslint-disable */
/**
 * HSP Frontend Tenant API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PropertyValidation } from './PropertyValidation';
import {
    PropertyValidationFromJSON,
    PropertyValidationFromJSONTyped,
    PropertyValidationToJSON,
} from './PropertyValidation';

/**
 * 
 * @export
 * @interface DatePropertyValidation
 */
export interface DatePropertyValidation extends PropertyValidation {
    /**
     * 
     * @type {Date}
     * @memberof DatePropertyValidation
     */
    min?: Date;
    /**
     * 
     * @type {Date}
     * @memberof DatePropertyValidation
     */
    max?: Date;
}

/**
 * Check if a given object implements the DatePropertyValidation interface.
 */
export function instanceOfDatePropertyValidation(value: object): value is DatePropertyValidation {
    return true;
}

export function DatePropertyValidationFromJSON(json: any): DatePropertyValidation {
    return DatePropertyValidationFromJSONTyped(json, false);
}

export function DatePropertyValidationFromJSONTyped(json: any, ignoreDiscriminator: boolean): DatePropertyValidation {
    if (json == null) {
        return json;
    }
    return {
        ...PropertyValidationFromJSONTyped(json, ignoreDiscriminator),
        'min': json['min'] == null ? undefined : (new Date(json['min'])),
        'max': json['max'] == null ? undefined : (new Date(json['max'])),
    };
}

export function DatePropertyValidationToJSON(value?: DatePropertyValidation | null): any {
    if (value == null) {
        return value;
    }
    return {
        ...PropertyValidationToJSON(value),
        'min': value['min'] == null ? undefined : ((value['min'] as any).toISOString().substring(0,10)),
        'max': value['max'] == null ? undefined : ((value['max'] as any).toISOString().substring(0,10)),
    };
}

