/* tslint:disable */
/* eslint-disable */
/**
 * HSP Frontend Tenant API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ElementType } from './ElementType';
import {
    ElementTypeFromJSON,
    ElementTypeFromJSONTyped,
    ElementTypeToJSON,
} from './ElementType';
import type { TextPropertyValidation } from './TextPropertyValidation';
import {
    TextPropertyValidationFromJSON,
    TextPropertyValidationFromJSONTyped,
    TextPropertyValidationToJSON,
} from './TextPropertyValidation';
import type { ContentDtoCondition } from './ContentDtoCondition';
import {
    ContentDtoConditionFromJSON,
    ContentDtoConditionFromJSONTyped,
    ContentDtoConditionToJSON,
} from './ContentDtoCondition';
import type { InternationalizedString } from './InternationalizedString';
import {
    InternationalizedStringFromJSON,
    InternationalizedStringFromJSONTyped,
    InternationalizedStringToJSON,
} from './InternationalizedString';
import type { PropertyDto } from './PropertyDto';
import {
    PropertyDtoFromJSON,
    PropertyDtoFromJSONTyped,
    PropertyDtoToJSON,
} from './PropertyDto';
import type { TextPropertyDtoAllOfValue } from './TextPropertyDtoAllOfValue';
import {
    TextPropertyDtoAllOfValueFromJSON,
    TextPropertyDtoAllOfValueFromJSONTyped,
    TextPropertyDtoAllOfValueToJSON,
} from './TextPropertyDtoAllOfValue';

/**
 * 
 * @export
 * @interface TextPropertyDto
 */
export interface TextPropertyDto extends PropertyDto {
    /**
     * 
     * @type {TextPropertyValidation}
     * @memberof TextPropertyDto
     */
    validation: TextPropertyValidation;
    /**
     * 
     * @type {boolean}
     * @memberof TextPropertyDto
     */
    multiline: boolean;
    /**
     * 
     * @type {TextPropertyDtoAllOfValue}
     * @memberof TextPropertyDto
     */
    value?: TextPropertyDtoAllOfValue;
}

/**
 * Check if a given object implements the TextPropertyDto interface.
 */
export function instanceOfTextPropertyDto(value: object): value is TextPropertyDto {
    if (!('validation' in value) || value['validation'] === undefined) return false;
    if (!('multiline' in value) || value['multiline'] === undefined) return false;
    return true;
}

export function TextPropertyDtoFromJSON(json: any): TextPropertyDto {
    return TextPropertyDtoFromJSONTyped(json, false);
}

export function TextPropertyDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): TextPropertyDto {
    if (json == null) {
        return json;
    }
    return {
        ...PropertyDtoFromJSONTyped(json, ignoreDiscriminator),
        'validation': TextPropertyValidationFromJSON(json['validation']),
        'multiline': json['multiline'],
        'value': json['value'] == null ? undefined : TextPropertyDtoAllOfValueFromJSON(json['value']),
    };
}

export function TextPropertyDtoToJSON(value?: TextPropertyDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        ...PropertyDtoToJSON(value),
        'validation': TextPropertyValidationToJSON(value['validation']),
        'multiline': value['multiline'],
        'value': TextPropertyDtoAllOfValueToJSON(value['value']),
    };
}

