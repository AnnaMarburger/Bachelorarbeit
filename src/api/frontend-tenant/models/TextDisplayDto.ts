/* tslint:disable */
/* eslint-disable */
/**
 * HSP Frontend Tenant API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DisplayDto } from './DisplayDto';
import {
    DisplayDtoFromJSON,
    DisplayDtoFromJSONTyped,
    DisplayDtoToJSON,
} from './DisplayDto';
import type { ElementType } from './ElementType';
import {
    ElementTypeFromJSON,
    ElementTypeFromJSONTyped,
    ElementTypeToJSON,
} from './ElementType';
import type { ContentDtoCondition } from './ContentDtoCondition';
import {
    ContentDtoConditionFromJSON,
    ContentDtoConditionFromJSONTyped,
    ContentDtoConditionToJSON,
} from './ContentDtoCondition';
import type { InternationalizedString } from './InternationalizedString';
import {
    InternationalizedStringFromJSON,
    InternationalizedStringFromJSONTyped,
    InternationalizedStringToJSON,
} from './InternationalizedString';

/**
 * 
 * @export
 * @interface TextDisplayDto
 */
export interface TextDisplayDto extends DisplayDto {
    /**
     * 
     * @type {InternationalizedString}
     * @memberof TextDisplayDto
     */
    value: InternationalizedString;
}

/**
 * Check if a given object implements the TextDisplayDto interface.
 */
export function instanceOfTextDisplayDto(value: object): value is TextDisplayDto {
    if (!('value' in value) || value['value'] === undefined) return false;
    return true;
}

export function TextDisplayDtoFromJSON(json: any): TextDisplayDto {
    return TextDisplayDtoFromJSONTyped(json, false);
}

export function TextDisplayDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): TextDisplayDto {
    if (json == null) {
        return json;
    }
    return {
        ...DisplayDtoFromJSONTyped(json, ignoreDiscriminator),
        'value': InternationalizedStringFromJSON(json['value']),
    };
}

export function TextDisplayDtoToJSON(value?: TextDisplayDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        ...DisplayDtoToJSON(value),
        'value': InternationalizedStringToJSON(value['value']),
    };
}

