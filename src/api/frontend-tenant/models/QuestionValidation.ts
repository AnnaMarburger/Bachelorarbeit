/* tslint:disable */
/* eslint-disable */
/**
 * HSP Frontend Tenant API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import { ChoiceQuestionValidationFromJSONTyped } from './ChoiceQuestionValidation';
import { DateQuestionValidationFromJSONTyped } from './DateQuestionValidation';
import { DateTimeQuestionValidationFromJSONTyped } from './DateTimeQuestionValidation';
import { LikertQuestionValidationFromJSONTyped } from './LikertQuestionValidation';
import { MatrixQuestionValidationFromJSONTyped } from './MatrixQuestionValidation';
import { NumberQuestionValidationFromJSONTyped } from './NumberQuestionValidation';
import { SliderQuestionValidationFromJSONTyped } from './SliderQuestionValidation';
import { TextQuestionValidationFromJSONTyped } from './TextQuestionValidation';
import { TimeQuestionValidationFromJSONTyped } from './TimeQuestionValidation';
/**
 * 
 * @export
 * @interface QuestionValidation
 */
export interface QuestionValidation {
    /**
     * 
     * @type {boolean}
     * @memberof QuestionValidation
     */
    required: boolean;
    /**
     * 
     * @type {string}
     * @memberof QuestionValidation
     */
    $type: string;
}

/**
 * Check if a given object implements the QuestionValidation interface.
 */
export function instanceOfQuestionValidation(value: object): value is QuestionValidation {
    if (!('required' in value) || value['required'] === undefined) return false;
    if (!('$type' in value) || value['$type'] === undefined) return false;
    return true;
}

export function QuestionValidationFromJSON(json: any): QuestionValidation {
    return QuestionValidationFromJSONTyped(json, false);
}

export function QuestionValidationFromJSONTyped(json: any, ignoreDiscriminator: boolean): QuestionValidation {
    if (json == null) {
        return json;
    }
    if (!ignoreDiscriminator) {
        if (json['$type'] === 'ChoiceQuestionValidation') {
            return ChoiceQuestionValidationFromJSONTyped(json, true);
        }
        if (json['$type'] === 'DateQuestionValidation') {
            return DateQuestionValidationFromJSONTyped(json, true);
        }
        if (json['$type'] === 'DateTimeQuestionValidation') {
            return DateTimeQuestionValidationFromJSONTyped(json, true);
        }
        if (json['$type'] === 'LikertQuestionValidation') {
            return LikertQuestionValidationFromJSONTyped(json, true);
        }
        if (json['$type'] === 'MatrixQuestionValidation') {
            return MatrixQuestionValidationFromJSONTyped(json, true);
        }
        if (json['$type'] === 'NumberQuestionValidation') {
            return NumberQuestionValidationFromJSONTyped(json, true);
        }
        if (json['$type'] === 'SliderQuestionValidation') {
            return SliderQuestionValidationFromJSONTyped(json, true);
        }
        if (json['$type'] === 'TextQuestionValidation') {
            return TextQuestionValidationFromJSONTyped(json, true);
        }
        if (json['$type'] === 'TimeQuestionValidation') {
            return TimeQuestionValidationFromJSONTyped(json, true);
        }
    }
    return {
        
        'required': json['required'],
        '$type': json['$type'],
    };
}

export function QuestionValidationToJSON(value?: QuestionValidation | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'required': value['required'],
        '$type': value['$type'],
    };
}

