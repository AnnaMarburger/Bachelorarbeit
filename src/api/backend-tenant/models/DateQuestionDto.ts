/* tslint:disable */
/* eslint-disable */
/**
 * HSP Backend Tenant API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { QuestionDtoAllOfHint } from './QuestionDtoAllOfHint';
import {
    QuestionDtoAllOfHintFromJSON,
    QuestionDtoAllOfHintFromJSONTyped,
    QuestionDtoAllOfHintToJSON,
} from './QuestionDtoAllOfHint';
import type { DateQuestionDtoAllOfAnswer } from './DateQuestionDtoAllOfAnswer';
import {
    DateQuestionDtoAllOfAnswerFromJSON,
    DateQuestionDtoAllOfAnswerFromJSONTyped,
    DateQuestionDtoAllOfAnswerToJSON,
} from './DateQuestionDtoAllOfAnswer';
import type { ElementType } from './ElementType';
import {
    ElementTypeFromJSON,
    ElementTypeFromJSONTyped,
    ElementTypeToJSON,
} from './ElementType';
import type { ContentDtoCondition } from './ContentDtoCondition';
import {
    ContentDtoConditionFromJSON,
    ContentDtoConditionFromJSONTyped,
    ContentDtoConditionToJSON,
} from './ContentDtoCondition';
import type { InternationalizedString } from './InternationalizedString';
import {
    InternationalizedStringFromJSON,
    InternationalizedStringFromJSONTyped,
    InternationalizedStringToJSON,
} from './InternationalizedString';
import type { QuestionDto } from './QuestionDto';
import {
    QuestionDtoFromJSON,
    QuestionDtoFromJSONTyped,
    QuestionDtoToJSON,
} from './QuestionDto';
import type { DateQuestionValidation } from './DateQuestionValidation';
import {
    DateQuestionValidationFromJSON,
    DateQuestionValidationFromJSONTyped,
    DateQuestionValidationToJSON,
} from './DateQuestionValidation';

/**
 * 
 * @export
 * @interface DateQuestionDto
 */
export interface DateQuestionDto extends QuestionDto {
    /**
     * 
     * @type {DateQuestionValidation}
     * @memberof DateQuestionDto
     */
    validation: DateQuestionValidation;
    /**
     * 
     * @type {DateQuestionDtoAllOfAnswer}
     * @memberof DateQuestionDto
     */
    answer?: DateQuestionDtoAllOfAnswer;
}

/**
 * Check if a given object implements the DateQuestionDto interface.
 */
export function instanceOfDateQuestionDto(value: object): value is DateQuestionDto {
    if (!('validation' in value) || value['validation'] === undefined) return false;
    return true;
}

export function DateQuestionDtoFromJSON(json: any): DateQuestionDto {
    return DateQuestionDtoFromJSONTyped(json, false);
}

export function DateQuestionDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): DateQuestionDto {
    if (json == null) {
        return json;
    }
    return {
        ...QuestionDtoFromJSONTyped(json, ignoreDiscriminator),
        'validation': DateQuestionValidationFromJSON(json['validation']),
        'answer': json['answer'] == null ? undefined : DateQuestionDtoAllOfAnswerFromJSON(json['answer']),
    };
}

export function DateQuestionDtoToJSON(value?: DateQuestionDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        ...QuestionDtoToJSON(value),
        'validation': DateQuestionValidationToJSON(value['validation']),
        'answer': DateQuestionDtoAllOfAnswerToJSON(value['answer']),
    };
}

