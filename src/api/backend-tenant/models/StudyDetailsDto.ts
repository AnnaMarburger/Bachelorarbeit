/* tslint:disable */
/* eslint-disable */
/**
 * HSP Backend Tenant API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ProjectDtoAllOfAsset } from './ProjectDtoAllOfAsset';
import {
    ProjectDtoAllOfAssetFromJSON,
    ProjectDtoAllOfAssetFromJSONTyped,
    ProjectDtoAllOfAssetToJSON,
} from './ProjectDtoAllOfAsset';
import type { LanguageDto } from './LanguageDto';
import {
    LanguageDtoFromJSON,
    LanguageDtoFromJSONTyped,
    LanguageDtoToJSON,
} from './LanguageDto';
import type { Permission } from './Permission';
import {
    PermissionFromJSON,
    PermissionFromJSONTyped,
    PermissionToJSON,
} from './Permission';
import type { InternationalizedString } from './InternationalizedString';
import {
    InternationalizedStringFromJSON,
    InternationalizedStringFromJSONTyped,
    InternationalizedStringToJSON,
} from './InternationalizedString';
import type { ProjectVisibility } from './ProjectVisibility';
import {
    ProjectVisibilityFromJSON,
    ProjectVisibilityFromJSONTyped,
    ProjectVisibilityToJSON,
} from './ProjectVisibility';
import type { InternationalizedDocument } from './InternationalizedDocument';
import {
    InternationalizedDocumentFromJSON,
    InternationalizedDocumentFromJSONTyped,
    InternationalizedDocumentToJSON,
} from './InternationalizedDocument';

/**
 * 
 * @export
 * @interface StudyDetailsDto
 */
export interface StudyDetailsDto {
    /**
     * 
     * @type {string}
     * @memberof StudyDetailsDto
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof StudyDetailsDto
     */
    name: string;
    /**
     * 
     * @type {InternationalizedString}
     * @memberof StudyDetailsDto
     */
    title: InternationalizedString;
    /**
     * 
     * @type {InternationalizedString}
     * @memberof StudyDetailsDto
     */
    shortDescription: InternationalizedString;
    /**
     * 
     * @type {InternationalizedDocument}
     * @memberof StudyDetailsDto
     */
    description: InternationalizedDocument;
    /**
     * 
     * @type {LanguageDto}
     * @memberof StudyDetailsDto
     */
    defaultLanguage: LanguageDto;
    /**
     * 
     * @type {Array<LanguageDto>}
     * @memberof StudyDetailsDto
     */
    languages: Array<LanguageDto>;
    /**
     * 
     * @type {ProjectDtoAllOfAsset}
     * @memberof StudyDetailsDto
     */
    asset?: ProjectDtoAllOfAsset;
    /**
     * 
     * @type {Date}
     * @memberof StudyDetailsDto
     */
    published?: Date;
    /**
     * 
     * @type {ProjectVisibility}
     * @memberof StudyDetailsDto
     */
    visibility: ProjectVisibility;
    /**
     * 
     * @type {Array<Permission>}
     * @memberof StudyDetailsDto
     */
    permissions: Array<Permission>;
}

/**
 * Check if a given object implements the StudyDetailsDto interface.
 */
export function instanceOfStudyDetailsDto(value: object): value is StudyDetailsDto {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('shortDescription' in value) || value['shortDescription'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('defaultLanguage' in value) || value['defaultLanguage'] === undefined) return false;
    if (!('languages' in value) || value['languages'] === undefined) return false;
    if (!('visibility' in value) || value['visibility'] === undefined) return false;
    if (!('permissions' in value) || value['permissions'] === undefined) return false;
    return true;
}

export function StudyDetailsDtoFromJSON(json: any): StudyDetailsDto {
    return StudyDetailsDtoFromJSONTyped(json, false);
}

export function StudyDetailsDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): StudyDetailsDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'title': InternationalizedStringFromJSON(json['title']),
        'shortDescription': InternationalizedStringFromJSON(json['shortDescription']),
        'description': InternationalizedDocumentFromJSON(json['description']),
        'defaultLanguage': LanguageDtoFromJSON(json['defaultLanguage']),
        'languages': ((json['languages'] as Array<any>).map(LanguageDtoFromJSON)),
        'asset': json['asset'] == null ? undefined : ProjectDtoAllOfAssetFromJSON(json['asset']),
        'published': json['published'] == null ? undefined : (new Date(json['published'])),
        'visibility': ProjectVisibilityFromJSON(json['visibility']),
        'permissions': ((json['permissions'] as Array<any>).map(PermissionFromJSON)),
    };
}

export function StudyDetailsDtoToJSON(value?: StudyDetailsDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'name': value['name'],
        'title': InternationalizedStringToJSON(value['title']),
        'shortDescription': InternationalizedStringToJSON(value['shortDescription']),
        'description': InternationalizedDocumentToJSON(value['description']),
        'defaultLanguage': LanguageDtoToJSON(value['defaultLanguage']),
        'languages': ((value['languages'] as Array<any>).map(LanguageDtoToJSON)),
        'asset': ProjectDtoAllOfAssetToJSON(value['asset']),
        'published': value['published'] == null ? undefined : ((value['published'] as any).toISOString()),
        'visibility': ProjectVisibilityToJSON(value['visibility']),
        'permissions': ((value['permissions'] as Array<any>).map(PermissionToJSON)),
    };
}

