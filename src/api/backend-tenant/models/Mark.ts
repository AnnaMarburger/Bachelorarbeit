/* tslint:disable */
/* eslint-disable */
/**
 * HSP Backend Tenant API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MarkAttrs } from './MarkAttrs';
import {
    MarkAttrsFromJSON,
    MarkAttrsFromJSONTyped,
    MarkAttrsToJSON,
} from './MarkAttrs';
import type { MarkType } from './MarkType';
import {
    MarkTypeFromJSON,
    MarkTypeFromJSONTyped,
    MarkTypeToJSON,
} from './MarkType';

/**
 * 
 * @export
 * @interface Mark
 */
export interface Mark {
    /**
     * 
     * @type {MarkType}
     * @memberof Mark
     */
    type: MarkType;
    /**
     * 
     * @type {MarkAttrs}
     * @memberof Mark
     */
    attrs?: MarkAttrs;
}

/**
 * Check if a given object implements the Mark interface.
 */
export function instanceOfMark(value: object): value is Mark {
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function MarkFromJSON(json: any): Mark {
    return MarkFromJSONTyped(json, false);
}

export function MarkFromJSONTyped(json: any, ignoreDiscriminator: boolean): Mark {
    if (json == null) {
        return json;
    }
    return {
        
        'type': MarkTypeFromJSON(json['type']),
        'attrs': json['attrs'] == null ? undefined : MarkAttrsFromJSON(json['attrs']),
    };
}

export function MarkToJSON(value?: Mark | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'type': MarkTypeToJSON(value['type']),
        'attrs': MarkAttrsToJSON(value['attrs']),
    };
}

