/* tslint:disable */
/* eslint-disable */
/**
 * HSP Backend Tenant API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import { ChoicePropertyValidationFromJSONTyped } from './ChoicePropertyValidation';
import { DatePropertyValidationFromJSONTyped } from './DatePropertyValidation';
import { NumberPropertyValidationFromJSONTyped } from './NumberPropertyValidation';
import { TextPropertyValidationFromJSONTyped } from './TextPropertyValidation';
/**
 * 
 * @export
 * @interface PropertyValidation
 */
export interface PropertyValidation {
    /**
     * 
     * @type {boolean}
     * @memberof PropertyValidation
     */
    required: boolean;
    /**
     * 
     * @type {string}
     * @memberof PropertyValidation
     */
    $type: string;
}

/**
 * Check if a given object implements the PropertyValidation interface.
 */
export function instanceOfPropertyValidation(value: object): value is PropertyValidation {
    if (!('required' in value) || value['required'] === undefined) return false;
    if (!('$type' in value) || value['$type'] === undefined) return false;
    return true;
}

export function PropertyValidationFromJSON(json: any): PropertyValidation {
    return PropertyValidationFromJSONTyped(json, false);
}

export function PropertyValidationFromJSONTyped(json: any, ignoreDiscriminator: boolean): PropertyValidation {
    if (json == null) {
        return json;
    }
    if (!ignoreDiscriminator) {
        if (json['$type'] === 'ChoicePropertyValidation') {
            return ChoicePropertyValidationFromJSONTyped(json, true);
        }
        if (json['$type'] === 'DatePropertyValidation') {
            return DatePropertyValidationFromJSONTyped(json, true);
        }
        if (json['$type'] === 'NumberPropertyValidation') {
            return NumberPropertyValidationFromJSONTyped(json, true);
        }
        if (json['$type'] === 'TextPropertyValidation') {
            return TextPropertyValidationFromJSONTyped(json, true);
        }
    }
    return {
        
        'required': json['required'],
        '$type': json['$type'],
    };
}

export function PropertyValidationToJSON(value?: PropertyValidation | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'required': value['required'],
        '$type': value['$type'],
    };
}

