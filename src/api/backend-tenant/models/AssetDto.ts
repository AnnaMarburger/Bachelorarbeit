/* tslint:disable */
/* eslint-disable */
/**
 * HSP Backend Tenant API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AssetDtoAllOfFile } from './AssetDtoAllOfFile';
import {
    AssetDtoAllOfFileFromJSON,
    AssetDtoAllOfFileFromJSONTyped,
    AssetDtoAllOfFileToJSON,
} from './AssetDtoAllOfFile';

/**
 * 
 * @export
 * @interface AssetDto
 */
export interface AssetDto {
    /**
     * 
     * @type {string}
     * @memberof AssetDto
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof AssetDto
     */
    tenantId: string;
    /**
     * 
     * @type {AssetDtoAllOfFile}
     * @memberof AssetDto
     */
    file?: AssetDtoAllOfFile;
    /**
     * 
     * @type {string}
     * @memberof AssetDto
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof AssetDto
     */
    description?: string;
    /**
     * 
     * @type {number}
     * @memberof AssetDto
     */
    width?: number;
    /**
     * 
     * @type {number}
     * @memberof AssetDto
     */
    height?: number;
    /**
     * 
     * @type {number}
     * @memberof AssetDto
     */
    x?: number;
    /**
     * 
     * @type {number}
     * @memberof AssetDto
     */
    y?: number;
    /**
     * 
     * @type {string}
     * @memberof AssetDto
     */
    contentType: string;
}

/**
 * Check if a given object implements the AssetDto interface.
 */
export function instanceOfAssetDto(value: object): value is AssetDto {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('tenantId' in value) || value['tenantId'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('contentType' in value) || value['contentType'] === undefined) return false;
    return true;
}

export function AssetDtoFromJSON(json: any): AssetDto {
    return AssetDtoFromJSONTyped(json, false);
}

export function AssetDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): AssetDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'tenantId': json['tenantId'],
        'file': json['file'] == null ? undefined : AssetDtoAllOfFileFromJSON(json['file']),
        'name': json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'width': json['width'] == null ? undefined : json['width'],
        'height': json['height'] == null ? undefined : json['height'],
        'x': json['x'] == null ? undefined : json['x'],
        'y': json['y'] == null ? undefined : json['y'],
        'contentType': json['contentType'],
    };
}

export function AssetDtoToJSON(value?: AssetDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'tenantId': value['tenantId'],
        'file': AssetDtoAllOfFileToJSON(value['file']),
        'name': value['name'],
        'description': value['description'],
        'width': value['width'],
        'height': value['height'],
        'x': value['x'],
        'y': value['y'],
        'contentType': value['contentType'],
    };
}

