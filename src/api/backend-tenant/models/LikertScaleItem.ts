/* tslint:disable */
/* eslint-disable */
/**
 * HSP Backend Tenant API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { InternationalizedString } from './InternationalizedString';
import {
    InternationalizedStringFromJSON,
    InternationalizedStringFromJSONTyped,
    InternationalizedStringToJSON,
} from './InternationalizedString';

/**
 * 
 * @export
 * @interface LikertScaleItem
 */
export interface LikertScaleItem {
    /**
     * 
     * @type {string}
     * @memberof LikertScaleItem
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof LikertScaleItem
     */
    value: string;
    /**
     * 
     * @type {InternationalizedString}
     * @memberof LikertScaleItem
     */
    label: InternationalizedString;
}

/**
 * Check if a given object implements the LikertScaleItem interface.
 */
export function instanceOfLikertScaleItem(value: object): value is LikertScaleItem {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('value' in value) || value['value'] === undefined) return false;
    if (!('label' in value) || value['label'] === undefined) return false;
    return true;
}

export function LikertScaleItemFromJSON(json: any): LikertScaleItem {
    return LikertScaleItemFromJSONTyped(json, false);
}

export function LikertScaleItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): LikertScaleItem {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'value': json['value'],
        'label': InternationalizedStringFromJSON(json['label']),
    };
}

export function LikertScaleItemToJSON(value?: LikertScaleItem | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'value': value['value'],
        'label': InternationalizedStringToJSON(value['label']),
    };
}

