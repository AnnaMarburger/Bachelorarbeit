/* tslint:disable */
/* eslint-disable */
/**
 * HSP Backend Tenant API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PropertyValidation } from './PropertyValidation';
import {
    PropertyValidationFromJSON,
    PropertyValidationFromJSONTyped,
    PropertyValidationToJSON,
} from './PropertyValidation';

/**
 * 
 * @export
 * @interface NumberPropertyValidation
 */
export interface NumberPropertyValidation extends PropertyValidation {
    /**
     * 
     * @type {number}
     * @memberof NumberPropertyValidation
     */
    min?: number;
    /**
     * 
     * @type {number}
     * @memberof NumberPropertyValidation
     */
    max?: number;
    /**
     * 
     * @type {boolean}
     * @memberof NumberPropertyValidation
     */
    fraction: boolean;
}

/**
 * Check if a given object implements the NumberPropertyValidation interface.
 */
export function instanceOfNumberPropertyValidation(value: object): value is NumberPropertyValidation {
    if (!('fraction' in value) || value['fraction'] === undefined) return false;
    return true;
}

export function NumberPropertyValidationFromJSON(json: any): NumberPropertyValidation {
    return NumberPropertyValidationFromJSONTyped(json, false);
}

export function NumberPropertyValidationFromJSONTyped(json: any, ignoreDiscriminator: boolean): NumberPropertyValidation {
    if (json == null) {
        return json;
    }
    return {
        ...PropertyValidationFromJSONTyped(json, ignoreDiscriminator),
        'min': json['min'] == null ? undefined : json['min'],
        'max': json['max'] == null ? undefined : json['max'],
        'fraction': json['fraction'],
    };
}

export function NumberPropertyValidationToJSON(value?: NumberPropertyValidation | null): any {
    if (value == null) {
        return value;
    }
    return {
        ...PropertyValidationToJSON(value),
        'min': value['min'],
        'max': value['max'],
        'fraction': value['fraction'],
    };
}

