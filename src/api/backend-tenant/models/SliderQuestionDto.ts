/* tslint:disable */
/* eslint-disable */
/**
 * HSP Backend Tenant API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { QuestionDtoAllOfHint } from './QuestionDtoAllOfHint';
import {
    QuestionDtoAllOfHintFromJSON,
    QuestionDtoAllOfHintFromJSONTyped,
    QuestionDtoAllOfHintToJSON,
} from './QuestionDtoAllOfHint';
import type { ElementType } from './ElementType';
import {
    ElementTypeFromJSON,
    ElementTypeFromJSONTyped,
    ElementTypeToJSON,
} from './ElementType';
import type { SliderQuestionDtoAllOfAnswer } from './SliderQuestionDtoAllOfAnswer';
import {
    SliderQuestionDtoAllOfAnswerFromJSON,
    SliderQuestionDtoAllOfAnswerFromJSONTyped,
    SliderQuestionDtoAllOfAnswerToJSON,
} from './SliderQuestionDtoAllOfAnswer';
import type { ContentDtoCondition } from './ContentDtoCondition';
import {
    ContentDtoConditionFromJSON,
    ContentDtoConditionFromJSONTyped,
    ContentDtoConditionToJSON,
} from './ContentDtoCondition';
import type { InternationalizedString } from './InternationalizedString';
import {
    InternationalizedStringFromJSON,
    InternationalizedStringFromJSONTyped,
    InternationalizedStringToJSON,
} from './InternationalizedString';
import type { QuestionDto } from './QuestionDto';
import {
    QuestionDtoFromJSON,
    QuestionDtoFromJSONTyped,
    QuestionDtoToJSON,
} from './QuestionDto';
import type { SliderQuestionValidation } from './SliderQuestionValidation';
import {
    SliderQuestionValidationFromJSON,
    SliderQuestionValidationFromJSONTyped,
    SliderQuestionValidationToJSON,
} from './SliderQuestionValidation';

/**
 * 
 * @export
 * @interface SliderQuestionDto
 */
export interface SliderQuestionDto extends QuestionDto {
    /**
     * 
     * @type {InternationalizedString}
     * @memberof SliderQuestionDto
     */
    minLabel: InternationalizedString;
    /**
     * 
     * @type {InternationalizedString}
     * @memberof SliderQuestionDto
     */
    maxLabel: InternationalizedString;
    /**
     * 
     * @type {boolean}
     * @memberof SliderQuestionDto
     */
    range: boolean;
    /**
     * 
     * @type {number}
     * @memberof SliderQuestionDto
     */
    steps?: number;
    /**
     * 
     * @type {SliderQuestionValidation}
     * @memberof SliderQuestionDto
     */
    validation: SliderQuestionValidation;
    /**
     * 
     * @type {SliderQuestionDtoAllOfAnswer}
     * @memberof SliderQuestionDto
     */
    answer?: SliderQuestionDtoAllOfAnswer;
}

/**
 * Check if a given object implements the SliderQuestionDto interface.
 */
export function instanceOfSliderQuestionDto(value: object): value is SliderQuestionDto {
    if (!('minLabel' in value) || value['minLabel'] === undefined) return false;
    if (!('maxLabel' in value) || value['maxLabel'] === undefined) return false;
    if (!('range' in value) || value['range'] === undefined) return false;
    if (!('validation' in value) || value['validation'] === undefined) return false;
    return true;
}

export function SliderQuestionDtoFromJSON(json: any): SliderQuestionDto {
    return SliderQuestionDtoFromJSONTyped(json, false);
}

export function SliderQuestionDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): SliderQuestionDto {
    if (json == null) {
        return json;
    }
    return {
        ...QuestionDtoFromJSONTyped(json, ignoreDiscriminator),
        'minLabel': InternationalizedStringFromJSON(json['minLabel']),
        'maxLabel': InternationalizedStringFromJSON(json['maxLabel']),
        'range': json['range'],
        'steps': json['steps'] == null ? undefined : json['steps'],
        'validation': SliderQuestionValidationFromJSON(json['validation']),
        'answer': json['answer'] == null ? undefined : SliderQuestionDtoAllOfAnswerFromJSON(json['answer']),
    };
}

export function SliderQuestionDtoToJSON(value?: SliderQuestionDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        ...QuestionDtoToJSON(value),
        'minLabel': InternationalizedStringToJSON(value['minLabel']),
        'maxLabel': InternationalizedStringToJSON(value['maxLabel']),
        'range': value['range'],
        'steps': value['steps'],
        'validation': SliderQuestionValidationToJSON(value['validation']),
        'answer': SliderQuestionDtoAllOfAnswerToJSON(value['answer']),
    };
}

