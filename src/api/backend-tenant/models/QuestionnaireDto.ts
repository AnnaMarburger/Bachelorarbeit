/* tslint:disable */
/* eslint-disable */
/**
 * HSP Backend Tenant API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { QuestionnaireInstantiationMode } from './QuestionnaireInstantiationMode';
import {
    QuestionnaireInstantiationModeFromJSON,
    QuestionnaireInstantiationModeFromJSONTyped,
    QuestionnaireInstantiationModeToJSON,
} from './QuestionnaireInstantiationMode';

/**
 * 
 * @export
 * @interface QuestionnaireDto
 */
export interface QuestionnaireDto {
    /**
     * 
     * @type {string}
     * @memberof QuestionnaireDto
     */
    id: string;
    /**
     * 
     * @type {number}
     * @memberof QuestionnaireDto
     */
    version: number;
    /**
     * 
     * @type {string}
     * @memberof QuestionnaireDto
     */
    name: string;
    /**
     * 
     * @type {Date}
     * @memberof QuestionnaireDto
     */
    published?: Date;
    /**
     * 
     * @type {QuestionnaireInstantiationMode}
     * @memberof QuestionnaireDto
     */
    instantiationMode: QuestionnaireInstantiationMode;
}

/**
 * Check if a given object implements the QuestionnaireDto interface.
 */
export function instanceOfQuestionnaireDto(value: object): value is QuestionnaireDto {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('version' in value) || value['version'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('instantiationMode' in value) || value['instantiationMode'] === undefined) return false;
    return true;
}

export function QuestionnaireDtoFromJSON(json: any): QuestionnaireDto {
    return QuestionnaireDtoFromJSONTyped(json, false);
}

export function QuestionnaireDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): QuestionnaireDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'version': json['version'],
        'name': json['name'],
        'published': json['published'] == null ? undefined : (new Date(json['published'])),
        'instantiationMode': QuestionnaireInstantiationModeFromJSON(json['instantiationMode']),
    };
}

export function QuestionnaireDtoToJSON(value?: QuestionnaireDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'version': value['version'],
        'name': value['name'],
        'published': value['published'] == null ? undefined : ((value['published'] as any).toISOString()),
        'instantiationMode': QuestionnaireInstantiationModeToJSON(value['instantiationMode']),
    };
}

