/* tslint:disable */
/* eslint-disable */
/**
 * HSP Backend Tenant API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { InternationalizedDocumentItem } from './InternationalizedDocumentItem';
import {
    InternationalizedDocumentItemFromJSON,
    InternationalizedDocumentItemFromJSONTyped,
    InternationalizedDocumentItemToJSON,
} from './InternationalizedDocumentItem';
import type { Node } from './Node';
import {
    NodeFromJSON,
    NodeFromJSONTyped,
    NodeToJSON,
} from './Node';

/**
 * 
 * @export
 * @interface InternationalizedDocument
 */
export interface InternationalizedDocument {
    /**
     * 
     * @type {{ [key: string]: Node; }}
     * @memberof InternationalizedDocument
     */
    translations: { [key: string]: Node; };
    /**
     * 
     * @type {InternationalizedDocumentItem}
     * @memberof InternationalizedDocument
     */
    item?: InternationalizedDocumentItem;
}

/**
 * Check if a given object implements the InternationalizedDocument interface.
 */
export function instanceOfInternationalizedDocument(value: object): value is InternationalizedDocument {
    if (!('translations' in value) || value['translations'] === undefined) return false;
    return true;
}

export function InternationalizedDocumentFromJSON(json: any): InternationalizedDocument {
    return InternationalizedDocumentFromJSONTyped(json, false);
}

export function InternationalizedDocumentFromJSONTyped(json: any, ignoreDiscriminator: boolean): InternationalizedDocument {
    if (json == null) {
        return json;
    }
    return {
        
        'translations': (mapValues(json['translations'], NodeFromJSON)),
        'item': json['item'] == null ? undefined : InternationalizedDocumentItemFromJSON(json['item']),
    };
}

export function InternationalizedDocumentToJSON(value?: InternationalizedDocument | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'translations': (mapValues(value['translations'], NodeToJSON)),
        'item': InternationalizedDocumentItemToJSON(value['item']),
    };
}

