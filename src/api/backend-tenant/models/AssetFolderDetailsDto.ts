/* tslint:disable */
/* eslint-disable */
/**
 * HSP Backend Tenant API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AssetDto } from './AssetDto';
import {
    AssetDtoFromJSON,
    AssetDtoFromJSONTyped,
    AssetDtoToJSON,
} from './AssetDto';
import type { AssetFolderDto } from './AssetFolderDto';
import {
    AssetFolderDtoFromJSON,
    AssetFolderDtoFromJSONTyped,
    AssetFolderDtoToJSON,
} from './AssetFolderDto';

/**
 * 
 * @export
 * @interface AssetFolderDetailsDto
 */
export interface AssetFolderDetailsDto {
    /**
     * 
     * @type {string}
     * @memberof AssetFolderDetailsDto
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof AssetFolderDetailsDto
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof AssetFolderDetailsDto
     */
    description?: string;
    /**
     * 
     * @type {Array<AssetDto>}
     * @memberof AssetFolderDetailsDto
     */
    assets: Array<AssetDto>;
    /**
     * 
     * @type {string}
     * @memberof AssetFolderDetailsDto
     */
    parentId?: string;
    /**
     * 
     * @type {Array<AssetFolderDto>}
     * @memberof AssetFolderDetailsDto
     */
    rootLine: Array<AssetFolderDto>;
    /**
     * 
     * @type {Array<AssetFolderDto>}
     * @memberof AssetFolderDetailsDto
     */
    children: Array<AssetFolderDto>;
}

/**
 * Check if a given object implements the AssetFolderDetailsDto interface.
 */
export function instanceOfAssetFolderDetailsDto(value: object): value is AssetFolderDetailsDto {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('assets' in value) || value['assets'] === undefined) return false;
    if (!('rootLine' in value) || value['rootLine'] === undefined) return false;
    if (!('children' in value) || value['children'] === undefined) return false;
    return true;
}

export function AssetFolderDetailsDtoFromJSON(json: any): AssetFolderDetailsDto {
    return AssetFolderDetailsDtoFromJSONTyped(json, false);
}

export function AssetFolderDetailsDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): AssetFolderDetailsDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'assets': ((json['assets'] as Array<any>).map(AssetDtoFromJSON)),
        'parentId': json['parentId'] == null ? undefined : json['parentId'],
        'rootLine': ((json['rootLine'] as Array<any>).map(AssetFolderDtoFromJSON)),
        'children': ((json['children'] as Array<any>).map(AssetFolderDtoFromJSON)),
    };
}

export function AssetFolderDetailsDtoToJSON(value?: AssetFolderDetailsDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'name': value['name'],
        'description': value['description'],
        'assets': ((value['assets'] as Array<any>).map(AssetDtoToJSON)),
        'parentId': value['parentId'],
        'rootLine': ((value['rootLine'] as Array<any>).map(AssetFolderDtoToJSON)),
        'children': ((value['children'] as Array<any>).map(AssetFolderDtoToJSON)),
    };
}

