/* tslint:disable */
/* eslint-disable */
/**
 * HSP Backend Tenant API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { InternationalizedString } from './InternationalizedString';
import {
    InternationalizedStringFromJSON,
    InternationalizedStringFromJSONTyped,
    InternationalizedStringToJSON,
} from './InternationalizedString';
import type { ProjectVisibility } from './ProjectVisibility';
import {
    ProjectVisibilityFromJSON,
    ProjectVisibilityFromJSONTyped,
    ProjectVisibilityToJSON,
} from './ProjectVisibility';
import type { InternationalizedDocument } from './InternationalizedDocument';
import {
    InternationalizedDocumentFromJSON,
    InternationalizedDocumentFromJSONTyped,
    InternationalizedDocumentToJSON,
} from './InternationalizedDocument';

/**
 * 
 * @export
 * @interface UpdateStudyCommand
 */
export interface UpdateStudyCommand {
    /**
     * 
     * @type {string}
     * @memberof UpdateStudyCommand
     */
    projectId: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateStudyCommand
     */
    name: string;
    /**
     * 
     * @type {InternationalizedString}
     * @memberof UpdateStudyCommand
     */
    title: InternationalizedString;
    /**
     * 
     * @type {InternationalizedString}
     * @memberof UpdateStudyCommand
     */
    shortDescription: InternationalizedString;
    /**
     * 
     * @type {InternationalizedDocument}
     * @memberof UpdateStudyCommand
     */
    description: InternationalizedDocument;
    /**
     * 
     * @type {string}
     * @memberof UpdateStudyCommand
     */
    defaultLanguageId: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof UpdateStudyCommand
     */
    languageIds: Array<string>;
    /**
     * 
     * @type {ProjectVisibility}
     * @memberof UpdateStudyCommand
     */
    visibility: ProjectVisibility;
    /**
     * 
     * @type {string}
     * @memberof UpdateStudyCommand
     */
    assetId?: string;
}

/**
 * Check if a given object implements the UpdateStudyCommand interface.
 */
export function instanceOfUpdateStudyCommand(value: object): value is UpdateStudyCommand {
    if (!('projectId' in value) || value['projectId'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('shortDescription' in value) || value['shortDescription'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('defaultLanguageId' in value) || value['defaultLanguageId'] === undefined) return false;
    if (!('languageIds' in value) || value['languageIds'] === undefined) return false;
    if (!('visibility' in value) || value['visibility'] === undefined) return false;
    return true;
}

export function UpdateStudyCommandFromJSON(json: any): UpdateStudyCommand {
    return UpdateStudyCommandFromJSONTyped(json, false);
}

export function UpdateStudyCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateStudyCommand {
    if (json == null) {
        return json;
    }
    return {
        
        'projectId': json['projectId'],
        'name': json['name'],
        'title': InternationalizedStringFromJSON(json['title']),
        'shortDescription': InternationalizedStringFromJSON(json['shortDescription']),
        'description': InternationalizedDocumentFromJSON(json['description']),
        'defaultLanguageId': json['defaultLanguageId'],
        'languageIds': json['languageIds'],
        'visibility': ProjectVisibilityFromJSON(json['visibility']),
        'assetId': json['assetId'] == null ? undefined : json['assetId'],
    };
}

export function UpdateStudyCommandToJSON(value?: UpdateStudyCommand | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'projectId': value['projectId'],
        'name': value['name'],
        'title': InternationalizedStringToJSON(value['title']),
        'shortDescription': InternationalizedStringToJSON(value['shortDescription']),
        'description': InternationalizedDocumentToJSON(value['description']),
        'defaultLanguageId': value['defaultLanguageId'],
        'languageIds': value['languageIds'],
        'visibility': ProjectVisibilityToJSON(value['visibility']),
        'assetId': value['assetId'],
    };
}

