/* tslint:disable */
/* eslint-disable */
/**
 * HSP Backend Tenant API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ContentDto } from './ContentDto';
import {
    ContentDtoFromJSON,
    ContentDtoFromJSONTyped,
    ContentDtoToJSON,
} from './ContentDto';
import type { AppPageDetailsDtoCondition } from './AppPageDetailsDtoCondition';
import {
    AppPageDetailsDtoConditionFromJSON,
    AppPageDetailsDtoConditionFromJSONTyped,
    AppPageDetailsDtoConditionToJSON,
} from './AppPageDetailsDtoCondition';
import type { InternationalizedString } from './InternationalizedString';
import {
    InternationalizedStringFromJSON,
    InternationalizedStringFromJSONTyped,
    InternationalizedStringToJSON,
} from './InternationalizedString';
import type { InternationalizedDocument } from './InternationalizedDocument';
import {
    InternationalizedDocumentFromJSON,
    InternationalizedDocumentFromJSONTyped,
    InternationalizedDocumentToJSON,
} from './InternationalizedDocument';

/**
 * 
 * @export
 * @interface UpdateContextObjectCommand
 */
export interface UpdateContextObjectCommand {
    /**
     * 
     * @type {string}
     * @memberof UpdateContextObjectCommand
     */
    containerId: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateContextObjectCommand
     */
    name: string;
    /**
     * 
     * @type {InternationalizedString}
     * @memberof UpdateContextObjectCommand
     */
    title: InternationalizedString;
    /**
     * 
     * @type {InternationalizedDocument}
     * @memberof UpdateContextObjectCommand
     */
    description: InternationalizedDocument;
    /**
     * 
     * @type {string}
     * @memberof UpdateContextObjectCommand
     */
    defaultLanguageId: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof UpdateContextObjectCommand
     */
    languageIds: Array<string>;
    /**
     * 
     * @type {Array<ContentDto>}
     * @memberof UpdateContextObjectCommand
     */
    contents: Array<ContentDto>;
    /**
     * 
     * @type {AppPageDetailsDtoCondition}
     * @memberof UpdateContextObjectCommand
     */
    condition?: AppPageDetailsDtoCondition;
}

/**
 * Check if a given object implements the UpdateContextObjectCommand interface.
 */
export function instanceOfUpdateContextObjectCommand(value: object): value is UpdateContextObjectCommand {
    if (!('containerId' in value) || value['containerId'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('defaultLanguageId' in value) || value['defaultLanguageId'] === undefined) return false;
    if (!('languageIds' in value) || value['languageIds'] === undefined) return false;
    if (!('contents' in value) || value['contents'] === undefined) return false;
    return true;
}

export function UpdateContextObjectCommandFromJSON(json: any): UpdateContextObjectCommand {
    return UpdateContextObjectCommandFromJSONTyped(json, false);
}

export function UpdateContextObjectCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateContextObjectCommand {
    if (json == null) {
        return json;
    }
    return {
        
        'containerId': json['containerId'],
        'name': json['name'],
        'title': InternationalizedStringFromJSON(json['title']),
        'description': InternationalizedDocumentFromJSON(json['description']),
        'defaultLanguageId': json['defaultLanguageId'],
        'languageIds': json['languageIds'],
        'contents': ((json['contents'] as Array<any>).map(ContentDtoFromJSON)),
        'condition': json['condition'] == null ? undefined : AppPageDetailsDtoConditionFromJSON(json['condition']),
    };
}

export function UpdateContextObjectCommandToJSON(value?: UpdateContextObjectCommand | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'containerId': value['containerId'],
        'name': value['name'],
        'title': InternationalizedStringToJSON(value['title']),
        'description': InternationalizedDocumentToJSON(value['description']),
        'defaultLanguageId': value['defaultLanguageId'],
        'languageIds': value['languageIds'],
        'contents': ((value['contents'] as Array<any>).map(ContentDtoToJSON)),
        'condition': AppPageDetailsDtoConditionToJSON(value['condition']),
    };
}

