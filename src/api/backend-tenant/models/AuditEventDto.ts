/* tslint:disable */
/* eslint-disable */
/**
 * HSP Backend Tenant API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AuditEventDto
 */
export interface AuditEventDto {
    /**
     * 
     * @type {number}
     * @memberof AuditEventDto
     */
    id: number;
    /**
     * 
     * @type {Date}
     * @memberof AuditEventDto
     */
    created: Date;
    /**
     * 
     * @type {Date}
     * @memberof AuditEventDto
     */
    lastModified: Date;
    /**
     * 
     * @type {string}
     * @memberof AuditEventDto
     */
    type: string;
    /**
     * 
     * @type {string}
     * @memberof AuditEventDto
     */
    userId?: string;
    /**
     * 
     * @type {string}
     * @memberof AuditEventDto
     */
    userName?: string;
}

/**
 * Check if a given object implements the AuditEventDto interface.
 */
export function instanceOfAuditEventDto(value: object): value is AuditEventDto {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('created' in value) || value['created'] === undefined) return false;
    if (!('lastModified' in value) || value['lastModified'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function AuditEventDtoFromJSON(json: any): AuditEventDto {
    return AuditEventDtoFromJSONTyped(json, false);
}

export function AuditEventDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): AuditEventDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'created': (new Date(json['created'])),
        'lastModified': (new Date(json['lastModified'])),
        'type': json['type'],
        'userId': json['userId'] == null ? undefined : json['userId'],
        'userName': json['userName'] == null ? undefined : json['userName'],
    };
}

export function AuditEventDtoToJSON(value?: AuditEventDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'created': ((value['created']).toISOString()),
        'lastModified': ((value['lastModified']).toISOString()),
        'type': value['type'],
        'userId': value['userId'],
        'userName': value['userName'],
    };
}

