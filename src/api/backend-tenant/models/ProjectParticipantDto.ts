/* tslint:disable */
/* eslint-disable */
/**
 * HSP Backend Tenant API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ProjectParticipantStatus } from './ProjectParticipantStatus';
import {
    ProjectParticipantStatusFromJSON,
    ProjectParticipantStatusFromJSONTyped,
    ProjectParticipantStatusToJSON,
} from './ProjectParticipantStatus';
import type { UserDto } from './UserDto';
import {
    UserDtoFromJSON,
    UserDtoFromJSONTyped,
    UserDtoToJSON,
} from './UserDto';

/**
 * 
 * @export
 * @interface ProjectParticipantDto
 */
export interface ProjectParticipantDto {
    /**
     * 
     * @type {UserDto}
     * @memberof ProjectParticipantDto
     */
    user: UserDto;
    /**
     * 
     * @type {string}
     * @memberof ProjectParticipantDto
     */
    chiffre: string;
    /**
     * 
     * @type {Date}
     * @memberof ProjectParticipantDto
     */
    created?: Date;
    /**
     * 
     * @type {Date}
     * @memberof ProjectParticipantDto
     */
    invited?: Date;
    /**
     * 
     * @type {Date}
     * @memberof ProjectParticipantDto
     */
    enrolled?: Date;
    /**
     * 
     * @type {Date}
     * @memberof ProjectParticipantDto
     */
    withdrawn?: Date;
    /**
     * 
     * @type {ProjectParticipantStatus}
     * @memberof ProjectParticipantDto
     */
    status: ProjectParticipantStatus;
}

/**
 * Check if a given object implements the ProjectParticipantDto interface.
 */
export function instanceOfProjectParticipantDto(value: object): value is ProjectParticipantDto {
    if (!('user' in value) || value['user'] === undefined) return false;
    if (!('chiffre' in value) || value['chiffre'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    return true;
}

export function ProjectParticipantDtoFromJSON(json: any): ProjectParticipantDto {
    return ProjectParticipantDtoFromJSONTyped(json, false);
}

export function ProjectParticipantDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProjectParticipantDto {
    if (json == null) {
        return json;
    }
    return {
        
        'user': UserDtoFromJSON(json['user']),
        'chiffre': json['chiffre'],
        'created': json['created'] == null ? undefined : (new Date(json['created'])),
        'invited': json['invited'] == null ? undefined : (new Date(json['invited'])),
        'enrolled': json['enrolled'] == null ? undefined : (new Date(json['enrolled'])),
        'withdrawn': json['withdrawn'] == null ? undefined : (new Date(json['withdrawn'])),
        'status': ProjectParticipantStatusFromJSON(json['status']),
    };
}

export function ProjectParticipantDtoToJSON(value?: ProjectParticipantDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'user': UserDtoToJSON(value['user']),
        'chiffre': value['chiffre'],
        'created': value['created'] == null ? undefined : ((value['created'] as any).toISOString()),
        'invited': value['invited'] == null ? undefined : ((value['invited'] as any).toISOString()),
        'enrolled': value['enrolled'] == null ? undefined : ((value['enrolled'] as any).toISOString()),
        'withdrawn': value['withdrawn'] == null ? undefined : ((value['withdrawn'] as any).toISOString()),
        'status': ProjectParticipantStatusToJSON(value['status']),
    };
}

